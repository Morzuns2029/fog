#Requires AutoHotkey v2.0
#SingleInstance Force

; === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
clickerScriptURL := "https://raw.githubusercontent.com/Morzuns2029/clic/main/privatscript.ahk"
clickerScriptFile := "clicker.ahk"
hwidFile := "activated_hwid.txt"
settingsFile := "settings.ini"
keyListURL := "https://raw.githubusercontent.com/Morzuns2029/fog/main/valid_keys.txt"

global thisHWID := GetHWID()

; === –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ===
ShowMainPanel() {
    panel := Gui("+AlwaysOnTop", "–ü–∞–Ω–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    if !IsActivated() {
        panel.AddText(, "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:")
        keyInput := panel.AddEdit("w200")
        panel.AddButton("w200", "‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å").OnEvent("Click", (*) => ActivateKey(keyInput.Value, panel))
    }

    panel.AddButton("w200", "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–∫–µ—Ä").OnEvent("Click", (*) => LaunchClicker(panel))
    panel.AddButton("w200", "‚ôª –°–±—Ä–æ—Å–∏—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏—é").OnEvent("Click", (*) => (panel.Destroy(), ResetActivation(), ShowMainPanel()))
    panel.AddButton("w200", "‚ùå –í—ã—Ö–æ–¥").OnEvent("Click", (*) => ExitApp())
    panel.Show("w250")
}

; === –ê–∫—Ç–∏–≤–∞—Ü–∏—è ===
ActivateKey(key, gui) {
    key := Trim(key)
    if key = "" {
        MsgBox "–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á."
        return
    }

    try {
        http := ComObject("WinHttp.WinHttpRequest.5.1")
        http.Open("GET", keyListURL, false)
        http.Send()
        if (http.Status != 200) {
            MsgBox "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∫–ª—é—á–µ–π! –ö–æ–¥: " http.Status
            return
        }
        keyList := http.ResponseText
    } catch {
        MsgBox "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª—é—á–∏."
        return
    }

    validLines := StrSplit(keyList, "`n")
    found := false
    updatedLines := []

    for line in validLines {
        parts := StrSplit(Trim(line), "|")
        if parts.Length >= 2 {
            keyPart := parts[1]
            statusPart := parts.Length >= 3 ? parts[2] : ""
            if Trim(keyPart) = key && Trim(statusPart) = "unused" {
                found := true
                updatedLines.Push(keyPart "|" thisHWID)
            } else {
                updatedLines.Push(Trim(line))
            }
        } else {
            updatedLines.Push(Trim(line))
        }
    }

    if !found {
        MsgBox "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á."
        return
    }

    FileAppend(thisHWID "`n", hwidFile)
    MsgBox "‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!"
    gui.Destroy()
    ShowMainPanel()
}

; === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ===
IsActivated() {
    return FileExist(hwidFile) && InStr(FileRead(hwidFile), thisHWID)
}

; === –°–±—Ä–æ—Å HWID ===
ResetActivation() {
    if !FileExist(hwidFile)
        return
    lines := StrSplit(FileRead(hwidFile), "`n")
    newLines := []
    for line in lines {
        if Trim(line) != thisHWID
            newLines.Push(line)
    }
    FileDelete(hwidFile)
    FileAppend(Join(newLines, "`n"), hwidFile)
    MsgBox "–ê–∫—Ç–∏–≤–∞—Ü–∏—è —Å–±—Ä–æ—à–µ–Ω–∞."
}

; === –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∫–ª–∏–∫–µ—Ä–∞ ===
LaunchClicker(gui) {
    if !IsActivated() {
        MsgBox "–°–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç!"
        return
    }

    try {
        http := ComObject("WinHttp.WinHttpRequest.5.1")
        http.Open("GET", clickerScriptURL, false)
        http.Send()
        if (http.Status != 200) {
            MsgBox "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–∫–µ—Ä–∞. –ö–æ–¥: " http.Status
            return
        }
        file := FileOpen(clickerScriptFile, "w")
        file.Write(http.ResponseText)
        file.Close()
        Run clickerScriptFile
        ExitApp
    } catch {
        MsgBox "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –∏–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–ª–∏–∫–µ—Ä."
    }
}

; === HWID ===
GetHWID() {
    RunWait("cmd /c wmic csproduct get uuid > hwid.tmp", , "Hide")
    hwid := Trim(FileRead("hwid.tmp"))
    FileDelete("hwid.tmp")
    return Trim(StrReplace(hwid, "UUID", ""))
}

; === –£—Ç–∏–ª–∏—Ç—ã ===
Join(arr, sep) {
    result := ""
    for i, v in arr {
        result .= (i > 1 ? sep : "") v
    }
    return result
}

; === –ó–∞–ø—É—Å–∫ ===
ShowMainPanel()
